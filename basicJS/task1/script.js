// Подготавливаем проект к дальнейшим урокам

// 1) Создать HTML страницу и подключить к ней файл скрипта

// 2) В файле скрипта создать 2 переменные (money и time), которые будут получать данные от пользователя:

// ·      Первая будет спрашивать "Ваш бюджет на месяц?"

// ·      Вторая "Введите дату в формате YYYY-MM-DD"

// 3) Создать объект appData, который будет содержать такие данные:

// ·      бюджет (передаем сюда переменную из п.2)

// ·      данные времени - timeData (передаем сюда переменную из п.2)

// ·      объект с обязательными расходами - expenses (смотри пункт 4)

// ·      объект с необязательными расходами - optionalExpenses (оставляем пока пустым)

// ·      массив данных с доп. доходом - income (оставляем пока пустым)

// ·      свойство savings (выставляем его как false)

// 4) Задать пользователю по 2 раза вопросы:

//     “Введите обязательную статью расходов в этом месяце”

//     “Во сколько обойдется?”

//     Записать ответы в объект expenses в формате: 

//     expenses: {
//     “ответ на первый вопрос” : “ответ на второй вопрос”
//     }
// 5) Вывести на экран пользователя бюджет на 1 день (брать месяц за 30 дней, использовать alert)

// 6) Проверить, чтобы все работало без ошибок в консоли

// 7) Создать свой репозиторий на GitHub и поместить туда папку с первым заданием

// Вопросы к этому заданию:

// Сколько типов данных существует в JS? //     8
  // number для любых чисел: целочисленных или чисел с плавающей точкой, целочисленные значения ограничены диапазоном ±253.
  // bigint для целых чисел произвольной длины.
  // string для строк. Строка может содержать один или больше символов, нет отдельного символьного типа.
  // boolean для true/false.
  // null для неизвестных значений – отдельный тип, имеющий одно значение null.
  // undefined для неприсвоенных значений – отдельный тип, имеющий одно значение undefined.
  // object для более сложных структур данных.
  // symbol для уникальных идентификаторов.

// Как вывести информацию в консоль?      // Console.log();

// Какая функция операторов || и &&?      // Логическое И(&&) и логическое ИЛИ(||) служат для 
  // проверки истинности любого из заданных условий, есть ещё третий логический оператор НЕ(!)

"use strict";

// 2
let money = +prompt("Ваш бюджет в месяц?", "30000"),
    time = prompt("Введите дату в формате YYYY-MM-DD", "2020-04-17"),
    a,
    b;

// 3

let appData = {
  budget: money,
  timeData: time,
  expenses: {},
  optionalExpenses: "",
  income: [],
  savings: false,
};

// 4
for (let i = 0; i < 2; i++) {
  a = prompt("Введите обязательную статью расходов в этом месяце", ""),
  b = prompt("Во сколько обойдется?", "");

  appData.expenses[a] = b;
}

// 5
alert("Ваш бюджет на один день: " + appData.budget / 30);
